{"version":3,"sources":["Components/Search/Search.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/SignIn/SignIn.js","Components/Sort/Sort.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","querySearch","logout","username","name","length","slice","className","Provider","value","type","placeholder","onChange","e","target","onClick","Body","blogs","console","log","mapped","map","items","i","url","id","points","author","comment","num_comments","storyTitle","title","key","href","Footer","Signin","prop","useState","userName","setUserName","password","setpassword","detail","htmlFor","user","pass","localStorage","setItem","Sort","searchBy","searchBy1","App","setPage1","login","setLogin","filter","setFilters","qury","setqry","details","event","axios","require","query","get","then","response","data","hits","catch","error","fetch","json","res","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ebb2398.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Search.css';\r\nimport { FaSearch, FaHeading } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst Search = (props) => {\r\n    const {querySearch, logout} = props;\r\n    let username = props.name;\r\n\r\n    if(username.length > 5){\r\n       username = username.slice(0,5) + '...'\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n           <IconContext.Provider value={{className: \"icon1\" }}>\r\n              <div>\r\n                 <FaHeading />\r\n              </div>\r\n           </IconContext.Provider>\r\n           \r\n            <span className='user'>{username}</span>\r\n            <div className='inp'>\r\n            <IconContext.Provider value={{className: \"icon\" }}>\r\n                <div>\r\n                    <FaSearch />\r\n                </div>\r\n             </IconContext.Provider>\r\n                  <input type=\"text\" placeholder=\"Search stories by title, url or author\" onChange={(e) => querySearch(e.target.value)}/>\r\n                  <p className='log' onClick={logout}>Logout</p>\r\n            </div>      \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './body.css'\r\n\r\nconst Body = (props) => {\r\n    const  {blogs} = props;\r\n    console.log(blogs)\r\n    const mapped = blogs.map((items, i) => {\r\n        \r\n        let url = items.url;\r\n        const id = items.points;\r\n        const author = items.author;\r\n        const comment = items.num_comments;\r\n        let storyTitle = items.title;\r\n\r\n        return (\r\n            <div key={i} className='blg'>\r\n              <h6><a href={url}>{storyTitle}</a></h6>\r\n              <span className='user'>(<a href={url}>{url}</a>)</span>\r\n              <p><a href={url}>{id} points</a> | <a href={url}>{author}</a> | <a href={url}>{comment} comments</a></p>\r\n            </div>\r\n        )\r\n        \r\n    })\r\n    return (\r\n       mapped.length === 0? '':mapped\r\n        // <h1>heelo</h1>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='ft'>\r\n           <ul>\r\n             <li><a href='#'>about</a></li>\r\n             <li><a href='https://news.ycombinator.com/'>Hacker news</a></li>\r\n             <li><a href='https://hn.algolia.com/api'>API Documentation</a></li>\r\n           </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{useState} from 'react';\r\n\r\nconst Signin = (prop) => {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const {detail} = prop;\r\n\r\n    const user = (e) => {\r\n        setUserName(e.target.value);\r\n    }\r\n\r\n    const pass = (e) => {\r\n        setpassword(e.target.value);\r\n    }\r\n\r\n    const submitDetail = () => {\r\n        if(userName !== '' && password !== ''){\r\n            localStorage.setItem(userName, password);\r\n            detail([userName, password])\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <article className=\"br ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center \">  \r\n        <div className=\"pa4 orange-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\" >\r\n                <legend className=\"f1 fw6 ph0 mh0\">Login</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">\r\n                    Name\r\n                    </label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-orange w-100\"\r\n                     type=\"text\"\r\n                     name=\"user-name\"\r\n                     id=\"user-name\"\r\n                     onChange={(e) => user(e)}\r\n                     />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                    </label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-orange w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => pass(e)}\r\n                    />\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input \r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"login\"\r\n                onClick={() => submitDetail()}\r\n                />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </article>\r\n        )\r\n     }\r\n\r\nexport default Signin;","import React from 'react';\r\nimport './Sort.css'\r\n\r\nconst Sort  = (props) => {\r\n    const {searchBy, searchBy1} = props;\r\n    return (\r\n        <div className='srt'>\r\n            <span >Search</span>\r\n            <select name=\"seach\" id='search' onChange={(e) => searchBy(e.target.value)}>\r\n                <option value='story'>Stories</option>\r\n                <option value='show_hn'>Show hn</option>\r\n            </select>\r\n\r\n            <span >by</span>\r\n            <select name=\"seach\" id='search' onChange={(e) => searchBy1(e.target.value)}>\r\n                <option value='reset'>All</option>\r\n                <option value='date'>Date</option>\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort;","import React, {useState} from 'react';\nimport Search from './Components/Search/Search'\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer'\nimport './App.css';\nimport Signin from './Components/SignIn/SignIn';\nimport 'tachyons';\nimport Sort from './Components/Sort/Sort'\nimport 'axios'\n\nconst App = () => {\n  \n  const [blogs, setPage1] = useState([]);\n  const [login, setLogin] = useState([]);\n  const [filter, setFilters] = useState('');\n  const [qury, setqry] = useState('');\n\n  // useEffect(() => {\n  //   querySearch();\n  // }, []);\n\n  const querySearch = (event) => {\n\n    const axios = require('axios');\n    let query = ' ';\n    if(event !== ''){\n      query = event;\n      setqry(event);\n    }\n\n\n   axios.get(`http://hn.algolia.com/api/v1/search?query=${query}&tags=${filter}`)\n  .then(function (response) {\n    setPage1(response.data.hits)\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n\n  }\n\n  const logout = () => {\n    setLogin([]);\n  }\n\n  const searchBy = (value) => {\n\n    fetch(`http://hn.algolia.com/api/v1/search?query=${qury}&tags=${value}`)\n    .then(response => response.json())\n    .then(res => setPage1(res.hits));\n\n    setFilters(value);\n\n  }\n\n  const searchBy1 = (value) => {\n    if(value === 'reset'){\n\n      fetch(`http://hn.algolia.com/api/v1/search?query=${qury}&tags=${filter}`)\n      .then(response => response.json())\n      .then(res => setPage1(res.hits))\n\n    }else {\n      fetch(`http://hn.algolia.com/api/v1/search_by_date?query=${qury}`)\n      .then(response => response.json())\n      .then(res => setPage1(res.hits))\n    }\n  }\n\n  const detail = (details) => {\n    setLogin(() => details);\n  }\n\n\n  return (\n      login.length === 0? <Signin detail={detail} />\n      :\n      <div>\n      <div className='main'>\n         <Search querySearch={querySearch} name={login[0]} logout={logout}/>\n         <Sort searchBy={searchBy} searchBy1={searchBy1}/>\n         <Body blogs={blogs}/>\n       </div>\n       <Footer/>\n      </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}